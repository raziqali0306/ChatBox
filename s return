[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex 32384d2..dfa0769 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -7562,6 +7562,11 @@[m
         "minimist": "^1.2.5"[m
       }[m
     },[m
[32m+[m[32m    "moment": {[m
[32m+[m[32m      "version": "2.24.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/moment/-/moment-2.24.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-bV7f+6l2QigeBBZSM/6yTNq4P2fNpSWj/0e7jQcy87A8e7o2nAfP/34/2ky5Vw4B9S446EtIhodAzkFCcR4dQg=="[m
[32m+[m[32m    },[m
     "ms": {[m
       "version": "2.1.1",[m
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",[m
[1mdiff --git a/package.json b/package.json[m
[1mindex aed96b2..7f70367 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -10,14 +10,14 @@[m
     "lint": "eslint . --ext .js,.jsx,.ts,.tsx"[m
   },[m
   "dependencies": {[m
[32m+[m[32m    "@react-native-community/async-storage": "1.9.0",[m
[32m+[m[32m    "@react-native-community/masked-view": "0.1.7",[m
     "@react-native-firebase/app": "6.3.4",[m
     "@react-native-firebase/auth": "6.3.4",[m
[31m-    "@react-native-community/masked-view": "0.1.7",[m
     "@twotalltotems/react-native-otp-input": "^1.3.5",[m
[31m-    "@react-native-community/async-storage": "1.9.0",[m
[31m-    "easy-peasy": "3.3.0",[m
[31m-    "uuid": "^3.3.3",[m
     "@types/uuid": "7.0.2",[m
[32m+[m[32m    "easy-peasy": "3.3.0",[m
[32m+[m[32m    "moment": "^2.24.0",[m
     "react": "16.11.0",[m
     "react-native": "0.62.0",[m
     "react-native-gesture-handler": "1.6.1",[m
[36m@@ -25,7 +25,8 @@[m
     "react-native-safe-area-context": "0.7.3",[m
     "react-native-screens": "2.4.0",[m
     "react-navigation": "4.3.6",[m
[31m-    "react-navigation-stack": "^2.3.10"[m
[32m+[m[32m    "react-navigation-stack": "^2.3.10",[m
[32m+[m[32m    "uuid": "^3.3.3"[m
   },[m
   "devDependencies": {[m
     "@babel/core": "^7.6.2",[m
[1mdiff --git a/src/common/Api.ts b/src/common/Api.ts[m
[1mindex b3a6d57..092f72b 100644[m
[1m--- a/src/common/Api.ts[m
[1m+++ b/src/common/Api.ts[m
[36m@@ -1,21 +1,20 @@[m
 import {v4 as uuid} from 'uuid';[m
 import {Message} from 'src/models';[m
[31m-import { NativeModules } from 'react-native';[m
[31m-[m
[32m+[m[32mimport {NativeModules} from 'react-native';[m
 [m
 interface AppConfig {[m
[31m-  serverUrl: string[m
[32m+[m[32m  serverUrl: string;[m
 }[m
 [m
 interface AppConfigModule {[m
[31m-  config: () => Promise<AppConfig | null | undefined>[m
[32m+[m[32m  config: () => Promise<AppConfig | null | undefined>;[m
 }[m
 [m
 const appConfigModule: AppConfigModule = NativeModules.AppConfigModule;[m
 export interface User {[m
   id: string;[m
   name: string;[m
[31m-  phoneNumber: string;[m
[32m+[m[32m  phonenumber: string;[m
   email: string;[m
 }[m
 [m
[36m@@ -28,12 +27,12 @@[m [minterface SendMessageBody {[m
 class Api {[m
   baseUrl: string = 'http://192.168.0.110:5000';[m
   constructor() {[m
[31m-    appConfigModule.config().then(config => {[m
[31m-      console.log("==== config ", config)[m
[32m+[m[32m    appConfigModule.config().then((config) => {[m
[32m+[m[32m      console.log('==== config ', config);[m
       if (config) {[m
[31m-        this.baseUrl = config.serverUrl[m
[32m+[m[32m        this.baseUrl = config.serverUrl;[m
       }[m
[31m-    })[m
[32m+[m[32m    });[m
   }[m
 [m
   async getUserInfo(userId: string): Promise<User | null> {[m
[1mdiff --git a/src/ui/screens/AppInitialLoader.tsx b/src/ui/screens/AppInitialLoader.tsx[m
[1mindex 852bebf..da44890 100644[m
[1m--- a/src/ui/screens/AppInitialLoader.tsx[m
[1m+++ b/src/ui/screens/AppInitialLoader.tsx[m
[36m@@ -1,12 +1,14 @@[m
[31m-import React, {useEffect} from 'react';[m
[32m+[m[32mimport React, {useEffect, useState} from 'react';[m
 import storage from './../../storage';[m
 import {useStoreActions} from './../../stores';[m
[32m+[m[32mimport {View, ActivityIndicator, Text} from 'react-native';[m
 [m
 const AppInitialLoader = (props) => {[m
   const loginUser = useStoreActions((state) => state.loginStore.loginUser);[m
 [m
   const navigateToAppropriateScreen = async () => {[m
     const userFromStorage = await storage.getLoggedInUser();[m
[32m+[m
     if (userFromStorage) {[m
       loginUser(userFromStorage);[m
       props.navigation.navigate('Home');[m
[36m@@ -19,7 +21,11 @@[m [mconst AppInitialLoader = (props) => {[m
     navigateToAppropriateScreen();[m
   }, []);[m
 [m
[31m-  return null;[m
[32m+[m[32m  return ([m
[32m+[m[32m    <View style={{flex: 1, justifyContent: 'center'}}>[m
[32m+[m[32m      <ActivityIndicator size="large" color="#0000ff" />[m
[32m+[m[32m    </View>[m
[32m+[m[32m  );[m
 };[m
 [m
 export default AppInitialLoader;[m
[1mdiff --git a/src/ui/screens/ChatScreen.tsx b/src/ui/screens/ChatScreen.tsx[m
[1mindex f282161..588a740 100644[m
[1m--- a/src/ui/screens/ChatScreen.tsx[m
[1m+++ b/src/ui/screens/ChatScreen.tsx[m
[36m@@ -1,15 +1,24 @@[m
 /* eslint-disable react-native/no-inline-styles */[m
 [m
 import React, {useState, useEffect} from 'react';[m
[31m-import {View, Text, StyleSheet, TextInput, Button} from 'react-native';[m
[32m+[m[32mimport {[m
[32m+[m[32m  View,[m
[32m+[m[32m  Text,[m
[32m+[m[32m  StyleSheet,[m
[32m+[m[32m  TextInput,[m
[32m+[m[32m  Button,[m
[32m+[m[32m  ActivityIndicator,[m
[32m+[m[32m} from 'react-native';[m
 import api, {User} from './../../common/Api';[m
 import {useStoreState} from './../../stores';[m
 import {Message} from 'src/models';[m
 import {FlatList} from 'react-native-gesture-handler';[m
[32m+[m[32mimport moment from 'moment';[m
 [m
 const ChatScreen = (props: any) => {[m
   const user = useStoreState((state) => state.loginStore.currentLoggedInUser);[m
   const [messageText, setMessageText] = useState('');[m
[32m+[m[32m  const [loading, setLoading] = useState(false);[m
 [m
   const [messages, setMessages] = useState<Array<Message>>([]);[m
 [m
[36m@@ -19,10 +28,14 @@[m [mconst ChatScreen = (props: any) => {[m
         user!.id,[m
         contact.id,[m
       );[m
[32m+[m[32m      console.log(user);[m
       setMessages(arrayOfMessages);[m
[32m+[m
[32m+[m[32m      setLoading(false);[m
     }[m
   };[m
   useEffect(() => {[m
[32m+[m[32m    setLoading(true);[m
     getMessages();[m
     const timer = setInterval(() => {[m
       if (user) {[m
[36m@@ -62,41 +75,51 @@[m [mconst ChatScreen = (props: any) => {[m
         <View style={styles.profileBox} />[m
         <View style={styles.userInfo}>[m
           <Text style={{fontSize: 14}}>{contact.name}</Text>[m
[31m-          <Text style={{fontSize: 10}}>{contact.phoneNumber}</Text>[m
[32m+[m[32m          <Text style={{fontSize: 10}}>{contact.phonenumber}</Text>[m
         </View>[m
       </View>[m
[31m-      <View style={{flex: 1}}>[m
[31m-        <FlatList[m
[31m-          data={messages}[m
[31m-          renderItem={({item}) => {[m
[31m-            return ([m
[31m-              <View[m
[31m-                style={[m
[31m-                  user && item.sender_id === user.id[m
[31m-                    ? {...styles.messageView, justifyContent: 'flex-end'}[m
[31m-                    : {...styles.messageView, justifyContent: 'flex-start'}[m
[31m-                }>[m
[31m-                <Text[m
[32m+[m[32m      {!loading ? ([m
[32m+[m[32m        <View style={{flex: 1}}>[m
[32m+[m[32m          <FlatList[m
[32m+[m[32m            data={messages}[m
[32m+[m[32m            renderItem={({item}) => {[m
[32m+[m[32m              return ([m
[32m+[m[32m                <View[m
                   style={[m
                     user && item.sender_id === user.id[m
[31m-                      ? {[m
[31m-                          ...styles.messageStyle,[m
[31m-                          backgroundColor: '#1E90FF',[m
[31m-                          color: 'white',[m
[31m-                        }[m
[31m-                      : {...styles.messageStyle, backgroundColor: '#B0C4DE'}[m
[32m+[m[32m                      ? {...styles.messageView, alignItems: 'flex-end'}[m
[32m+[m[32m                      : {...styles.messageView, alignItems: 'flex-start'}[m
                   }>[m
[31m-                  {item.text}[m
[31m-                </Text>[m
[31m-              </View>[m
[31m-            );[m
[31m-          }}[m
[31m-          keyExtractor={(item) => {[m
[31m-            return item.message_id;[m
[31m-          }}[m
[31m-          inverted[m
[31m-        />[m
[31m-      </View>[m
[32m+[m[32m                  <Text[m
[32m+[m[32m                    style={[m
[32m+[m[32m                      user && item.sender_id === user.id[m
[32m+[m[32m                        ? {[m
[32m+[m[32m                            ...styles.messageStyle,[m
[32m+[m[32m                            backgroundColor: '#1E90FF',[m
[32m+[m[32m                            color: 'white',[m
[32m+[m[32m                          }[m
[32m+[m[32m                        : {...styles.messageStyle, backgroundColor: '#B0C4DE'}[m
[32m+[m[32m                    }>[m
[32m+[m[32m                    {item.text}[m
[32m+[m[32m                  </Text>[m
[32m+[m[32m                  <Text style={{fontSize: 12, color: '#00000044'}}>[m
[32m+[m[32m                    {moment(item.timestamp).hours()}:[m
[32m+[m[32m                    {moment(item.timestamp).minutes()}[m
[32m+[m[32m                  </Text>[m
[32m+[m[32m                </View>[m
[32m+[m[32m              );[m
[32m+[m[32m            }}[m
[32m+[m[32m            keyExtractor={(item) => {[m
[32m+[m[32m              return item.message_id;[m
[32m+[m[32m            }}[m
[32m+[m[32m            inverted[m
[32m+[m[32m          />[m
[32m+[m[32m        </View>[m
[32m+[m[32m      ) : ([m
[32m+[m[32m        <View style={{flex: 1, justifyContent: 'center'}}>[m
[32m+[m[32m          <ActivityIndicator size="large" color="#0000ff" />[m
[32m+[m[32m        </View>[m
[32m+[m[32m      )}[m
       <View style={styles.searchView}>[m
         <TextInput[m
           multiline[m
[36m@@ -137,11 +160,13 @@[m [mconst styles = StyleSheet.create({[m
     marginRight: 10,[m
   },[m
   item: {[m
[32m+[m[32m    elevation: 3,[m
[32m+[m[32m    borderRadius: 8,[m
[32m+[m[32m    backgroundColor: 'white',[m
     height: 56,[m
     flexDirection: 'row',[m
     paddingHorizontal: 10,[m
     alignItems: 'center',[m
[31m-    elevation: 2,[m
   },[m
   profileBox: {[m
     backgroundColor: '#F7F7F7',[m
[36m@@ -155,7 +180,6 @@[m [mconst styles = StyleSheet.create({[m
     flex: 1,[m
   },[m
   messageView: {[m
[31m-    flexDirection: 'row',[m
     margin: 5,[m
   },[m
   messageStyle: {[m
[36m@@ -164,6 +188,7 @@[m [mconst styles = StyleSheet.create({[m
     paddingHorizontal: 10,[m
     borderRadius: 10,[m
     elevation: 2,[m
[32m+[m[32m    fontSize: 13,[m
   },[m
 });[m
 [m
[1mdiff --git a/src/ui/screens/HomeScreen.tsx b/src/ui/screens/HomeScreen.tsx[m
[1mindex 56297b2..7d08fab 100644[m
[1m--- a/src/ui/screens/HomeScreen.tsx[m
[1m+++ b/src/ui/screens/HomeScreen.tsx[m
[36m@@ -1,11 +1,19 @@[m
 import React, {useState, useEffect} from 'react';[m
[31m-import {Text, View, StyleSheet, Button, TouchableOpacity} from 'react-native';[m
[32m+[m[32mimport {[m
[32m+[m[32m  Text,[m
[32m+[m[32m  View,[m
[32m+[m[32m  StyleSheet,[m
[32m+[m[32m  Button,[m
[32m+[m[32m  TouchableOpacity,[m
[32m+[m[32m  ActivityIndicator,[m
[32m+[m[32m} from 'react-native';[m
 import {TextInput, FlatList} from 'react-native-gesture-handler';[m
 import api, {User} from './../../common/Api';[m
 [m
 const HomeScreen = (props) => {[m
   const [searchText, setSearchText] = useState('');[m
   const [usersList, setUserList] = useState<Array<User>>([]);[m
[32m+[m[32m  const [loading, SetLoading] = useState(false);[m
   const pressHandler = async () => {[m
     if (!searchText) {[m
       return;[m
[36m@@ -17,8 +25,10 @@[m [mconst HomeScreen = (props) => {[m
   };[m
 [m
   const getAllUsers = async () => {[m
[32m+[m[32m    SetLoading(true);[m
     const response = await api.getAllUsers();[m
     setUserList(response);[m
[32m+[m[32m    SetLoading(false);[m
   };[m
 [m
   useEffect(() => {[m
[36m@@ -43,31 +53,37 @@[m [mconst HomeScreen = (props) => {[m
         />[m
         <Button title={'SEARCH'} onPress={pressHandler} />[m
       </View>[m
[31m-      <View style={{flex: 1}}>[m
[31m-        <FlatList[m
[31m-          data={usersList}[m
[31m-          renderItem={({item}) => {[m
[31m-            return ([m
[31m-              <TouchableOpacity[m
[31m-                style={styles.item}[m
[31m-                onPress={() => {[m
[31m-                  props.navigation.navigate('ChatScreen', {[m
[31m-                    contact: item,[m
[31m-                  });[m
[31m-                }}>[m
[31m-                <View style={styles.profileBox} />[m
[31m-                <View style={styles.userInfo}>[m
[31m-                  <Text style={{fontSize: 18}}>{item.name}</Text>[m
[31m-                  <Text style={{fontSize: 12}}>{item.phoneNumber}</Text>[m
[31m-                </View>[m
[31m-              </TouchableOpacity>[m
[31m-            );[m
[31m-          }}[m
[31m-          keyExtractor={(item) => {[m
[31m-            return item.phoneNumber;[m
[31m-          }}[m
[31m-        />[m
[31m-      </View>[m
[32m+[m[32m      {loading ? ([m
[32m+[m[32m        <View style={{flex: 1, justifyContent: 'center'}}>[m
[32m+[m[32m          <ActivityIndicator size="large" color="#0000ff" />[m
[32m+[m[32m        </View>[m
[32m+[m[32m      ) : ([m
[32m+[m[32m        <View style={{flex: 1}}>[m
[32m+[m[32m          <FlatList[m
[32m+[m[32m            data={usersList}[m
[32m+[m[32m            renderItem={({item}) => {[m
[32m+[m[32m              return ([m
[32m+[m[32m                <TouchableOpacity[m
[32m+[m[32m                  style={styles.item}[m
[32m+[m[32m                  onPress={() => {[m
[32m+[m[32m                    props.navigation.navigate('ChatScreen', {[m
[32m+[m[32m                      contact: item,[m
[32m+[m[32m                    });[m
[32m+[m[32m                  }}>[m
[32m+[m[32m                  <View style={styles.profileBox} />[m
[32m+[m[32m                  <View style={styles.userInfo}>[m
[32m+[m[32m                    <Text style={{fontSize: 18}}>{item.name}</Text>[m
[32m+[m[32m                    <Text style={{fontSize: 12}}>{item.phonenumber}</Text>[m
[32m+[m[32m                  </View>[m
[32m+[m[32m                </TouchableOpacity>[m
[32m+[m[32m              );[m
[32m+[m[32m            }}[m
[32m+[m[32m            keyExtractor={(item) => {[m
[32m+[m[32m              return item.phonenumber;[m
[32m+[m[32m            }}[m
[32m+[m[32m          />[m
[32m+[m[32m        </View>[m
[32m+[m[32m      )}[m
     </View>[m
   );[m
 };[m
[1mdiff --git a/src/ui/screens/NameInputScreen.tsx b/src/ui/screens/NameInputScreen.tsx[m
[1mindex b29ab77..2daf4ed 100644[m
[1m--- a/src/ui/screens/NameInputScreen.tsx[m
[1m+++ b/src/ui/screens/NameInputScreen.tsx[m
[36m@@ -16,7 +16,7 @@[m [mconst NameInputScreen = (props: any) => {[m
     const user: User = {[m
       id: firebaseUser.uid,[m
       name: userName,[m
[31m-      phoneNumber: firebaseUser.phoneNumber ? firebaseUser.phoneNumber : '',[m
[32m+[m[32m      phoneNumber: firebaseUser.phonenumber ? firebaseUser.phonenumber : '',[m
       email: '',[m
     };[m
     const isUserSignedIn = await api.signUpUser(user);[m
[1mdiff --git a/src/ui/screens/OTPScreen.tsx b/src/ui/screens/OTPScreen.tsx[m
[1mindex f3e0364..7cb6934 100644[m
[1m--- a/src/ui/screens/OTPScreen.tsx[m
[1m+++ b/src/ui/screens/OTPScreen.tsx[m
[36m@@ -1,5 +1,5 @@[m
[31m-import React, {useEffect} from 'react';[m
[31m-import {View, Text, StyleSheet} from 'react-native';[m
[32m+[m[32mimport React, {useEffect, useState} from 'react';[m
[32m+[m[32mimport {View, Text, StyleSheet, ActivityIndicator} from 'react-native';[m
 import OTPInputView from '@twotalltotems/react-native-otp-input';[m
 import {FirebaseAuthTypes} from '@react-native-firebase/auth';[m
 import firebase from '@react-native-firebase/app';[m
[36m@@ -11,21 +11,21 @@[m [mconst OTPScreen = ({navigation}) => {[m
   const confirmation: FirebaseAuthTypes.ConfirmationResult = navigation.getParam([m
     'confirmation',[m
   );[m
[32m+[m[32m  const [loading, setLoading] = useState(false);[m
 [m
   const listenAuthStateChange = () => {[m
     firebase.auth().onAuthStateChanged(async (user) => {[m
       if (user) {[m
         const userExists = await Api.userExists(user.uid);[m
[31m-        console.log('userExists');[m
[31m-        console.log(userExists);[m
[31m-        console.log('userExists');[m
         if (userExists) {[m
           const userInfo = await Api.getUserInfo(user.uid);[m
           if (userInfo) {[m
             loginUser(userInfo);[m
[32m+[m[32m            setLoading(false);[m
             navigation.navigate('HomeScreen');[m
           }[m
         } else {[m
[32m+[m[32m          setLoading(false);[m
           navigation.navigate('NameInputScreen', {[m
             user: user,[m
           });[m
[36m@@ -58,9 +58,15 @@[m [mconst OTPScreen = ({navigation}) => {[m
           style={{width: '100%', height: 100}}[m
           pinCount={6}[m
           onCodeFilled={(code) => {[m
[32m+[m[32m            setLoading(true);[m
             login(code);[m
           }}[m
         />[m
[32m+[m[32m        {loading ? ([m
[32m+[m[32m          <View style={{justifyContent: 'center', marginTop: 100}}>[m
[32m+[m[32m            <ActivityIndicator size="large" color="#0000ff" />[m
[32m+[m[32m          </View>[m
[32m+[m[32m        ) : null}[m
       </View>[m
     </View>[m
   );[m
[36m@@ -81,7 +87,6 @@[m [mconst styles = StyleSheet.create({[m
   },[m
   otpArea: {[m
     flex: 1,[m
[31m-    flexDirection: 'row',[m
     marginVertical: 20,[m
   },[m
   otpFeildArea: {[m
[1mdiff --git a/src/ui/screens/PhoneNumberScreen.tsx b/src/ui/screens/PhoneNumberScreen.tsx[m
[1mindex 9ae24c0..0b5f8d3 100644[m
[1m--- a/src/ui/screens/PhoneNumberScreen.tsx[m
[1m+++ b/src/ui/screens/PhoneNumberScreen.tsx[m
[36m@@ -1,5 +1,12 @@[m
 import React, {useState, useEffect} from 'react';[m
[31m-import {View, Button, TextInput, StyleSheet, Text} from 'react-native';[m
[32m+[m[32mimport {[m
[32m+[m[32m  View,[m
[32m+[m[32m  Button,[m
[32m+[m[32m  TextInput,[m
[32m+[m[32m  StyleSheet,[m
[32m+[m[32m  Text,[m
[32m+[m[32m  ActivityIndicator,[m
[32m+[m[32m} from 'react-native';[m
 import auth, {firebase} from '@react-native-firebase/auth';[m
 [m
 const PhoneNumberScreen = (props) => {[m
[36m@@ -14,9 +21,12 @@[m [mconst PhoneNumberScreen = (props) => {[m
   const [number, setNumber] = useState<string>('');[m
 [m
   const [shouldShowButton, setShouldShowButton] = useState(false);[m
[31m-[m
[32m+[m[32m  const [showLoading, setShowLoading] = useState(false);[m
   const buttonHandler = async () => {[m
[32m+[m[32m    setShouldShowButton(false);[m
[32m+[m[32m    setShowLoading(true);[m
     const confirmation = await auth().signInWithPhoneNumber(`+91 ${number}`);[m
[32m+[m[32m    setShowLoading(false);[m
     props.navigation.navigate('OTPScreen', {[m
       phoneNumber: number,[m
       confirmation: confirmation,[m
[36m@@ -55,6 +65,10 @@[m [mconst PhoneNumberScreen = (props) => {[m
         <View style={styles.buttonView}>[m
           <Button title={'NEXT'} onPress={buttonHandler} />[m
         </View>[m
[32m+[m[32m      ) : showLoading ? ([m
[32m+[m[32m        <View style={{justifyContent: 'center', marginBottom: 20}}>[m
[32m+[m[32m          <ActivityIndicator size="large" color="#0000ff" />[m
[32m+[m[32m     